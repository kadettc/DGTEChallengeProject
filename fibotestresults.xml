<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="1" name="pytest" skips="0" tests="12" time="63.906"><testcase classname="DGfibonacci_testcases.TestFibonacci" file="DGfibonacci_testcases.py" line="60" name="test_DGFibonacci_BackEnd_DeleteAction" time="0.114999771118"></testcase><testcase classname="DGfibonacci_testcases.TestFibonacci" file="DGfibonacci_testcases.py" line="64" name="test_DGFibonacci_BackEnd_InvalidAction" time="0.106000185013"></testcase><testcase classname="DGfibonacci_testcases.TestFibonacci" file="DGfibonacci_testcases.py" line="52" name="test_DGFibonacci_BackEnd_PostAction" time="0.0999999046326"></testcase><testcase classname="DGfibonacci_testcases.TestFibonacci" file="DGfibonacci_testcases.py" line="56" name="test_DGFibonacci_BackEnd_PutAction" time="0.104000091553"></testcase><testcase classname="DGfibonacci_testcases.TestFibonacci" file="DGfibonacci_testcases.py" line="44" name="test_DGFibonacci_BackEnd_accuracy" time="62.5480000973"><failure message="AssertionError: largest accurate term is:71">self = &lt;DGfibonacci_testcases.TestFibonacci testMethod=test_DGFibonacci_BackEnd_accuracy&gt;

    def test_DGFibonacci_BackEnd_accuracy(self):
        &quot;&quot;&quot;
            test if maximum valid term is an accurate fibonacci number
            accurate is defined as: term(n) = term(n-1) + term(n-2)
            &quot;&quot;&quot;
        maxaccterm=getfibo_accuracy(self.maxterm)
&gt;       self.assertEqual(maxaccterm,self.maxterm,&apos;largest accurate term is:%d&apos;%maxaccterm)
E       AssertionError: largest accurate term is:71

DGfibonacci_testcases.py:51: AssertionError</failure></testcase><testcase classname="DGfibonacci_testcases.TestFibonacci" file="DGfibonacci_testcases.py" line="40" name="test_DGFibonacci_BackEnd_blank" time="0.101999998093"></testcase><testcase classname="DGfibonacci_testcases.TestFibonacci" file="DGfibonacci_testcases.py" line="24" name="test_DGFibonacci_BackEnd_maximum_valid" time="0.0979998111725"></testcase><testcase classname="DGfibonacci_testcases.TestFibonacci" file="DGfibonacci_testcases.py" line="28" name="test_DGFibonacci_BackEnd_morethanmaximum" time="0.0980000495911"></testcase><testcase classname="DGfibonacci_testcases.TestFibonacci" file="DGfibonacci_testcases.py" line="32" name="test_DGFibonacci_BackEnd_negative" time="0.105000019073"></testcase><testcase classname="DGfibonacci_testcases.TestFibonacci" file="DGfibonacci_testcases.py" line="20" name="test_DGFibonacci_BackEnd_nonintnumber" time="0.0969998836517"></testcase><testcase classname="DGfibonacci_testcases.TestFibonacci" file="DGfibonacci_testcases.py" line="36" name="test_DGFibonacci_BackEnd_nonnumeric" time="0.102999925613"></testcase><testcase classname="DGfibonacci_testcases.TestFibonacci" file="DGfibonacci_testcases.py" line="16" name="test_DGFibonacci_BackEnd_valid" time="0.104000091553"></testcase></testsuite>